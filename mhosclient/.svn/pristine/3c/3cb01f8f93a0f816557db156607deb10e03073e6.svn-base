package com.catic.mobilehos.service;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;

import net.sf.json.JSONArray;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.dao.DataAccessException;

import com.catic.mobilehos.dao.PatientDAO;
import com.catic.mobilehos.dao.UserDAO;
import com.catic.mobilehos.po.PatientPO;
import com.catic.mobilehos.po.UserPO;
import com.catic.mobilehos.service.vo.Page;

public class UserMngServiceImpl implements UserMngService {

	private Log log = LogFactory.getLog(this.getClass());

	private UserDAO userDAO;
	private PatientDAO patientDAO;

	public UserDAO getUserDAO() {
		return userDAO;
	}

	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	public PatientDAO getPatientDAO() {
		return patientDAO;
	}

	public void setPatientDAO(PatientDAO patientDAO) {
		this.patientDAO = patientDAO;
	}

	@Override
	public JSONArray getAllUsersList() {
		try {
			List<UserPO> users = userDAO.getAllUsers();
			JSONArray jarr = JSONArray.fromObject(users);
			return jarr;
		} catch (DataAccessException dacEx) {
			throw dacEx;
		} catch (Exception ex) {
			log.error(null, ex);
			if (ex instanceof RuntimeException) {
				throw (RuntimeException) ex;
			} else {
				throw new RuntimeException(ex);
			}
		}
	}

	@Override
	public Page<UserPO> findUserPOByByParas(String user_name, String status, Timestamp start_create_date, Timestamp end_create_date, int curPage, int pageSize) {

		int totalRecord = userDAO.getCountUser(user_name, status, start_create_date, end_create_date);
		Page<UserPO> page = new Page<UserPO>(totalRecord, pageSize, curPage);
		List<UserPO> list = userDAO.getUsersbyParas(user_name, status, start_create_date, end_create_date, page.getOffset(), page.getPageSize());
		page.setCurPageData(list);
		return page;
	}

	@Override
	public List<PatientPO> findPatientsByUserId(String userId) {
		return patientDAO.findPatientsByUserId(userId);
	}

	@Override
	public int updateStatus(String userId, int status, Date blcakTime) {

		return userDAO.updateStatus(userId, status, blcakTime);
	}

}
