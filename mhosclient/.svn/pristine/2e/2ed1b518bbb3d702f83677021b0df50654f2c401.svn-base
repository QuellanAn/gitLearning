package com.catic.mobilehos.interceptor;

import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.apache.struts2.ServletActionContext;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
/** session过期、登录有效性及操作的权限验证拦截器 */
@SuppressWarnings("serial")
public class LoginedCheckInterceptor extends AbstractInterceptor {
    /** 拦截请求并进行登录有效性验证 */
    public String intercept(ActionInvocation ai) throws Exception {
//        //对登录与注销请求直接放行,不予拦截
//        if (url.indexOf("manager_")!=-1 || url.indexOf("logout")!=-1){
//            return ai.invoke();
//        }else{
//        	 //验证Session是否过期
//            if(!ServletActionContext.getRequest().isRequestedSessionIdValid()){
//                //session过期,转向session过期提示页,最终跳转至登录页面
//                return "tologin";
//            }else{
//            	if (request.getHeader("X-Requested-With") != null && request.getHeader("X-Requested-With").equalsIgnoreCase("XMLHttpRequest")) {   
//            		response.setCharacterEncoding("text/html;charset=utf-8"); 
//            		response.setContentType("text/html;charset=utf-8"); 
//            		flag = "9999"; 
//            		pw.write(flag); 
//            		return null;
//            		//不是异步请求的拦截
//                } else { 
//                	String name = (String) ServletActionContext.getRequest().getSession().getAttribute("userName");
//                    //验证是否已经登录
//                    if (name==null){
//                    	response.setCharacterEncoding("text/html;charset=utf-8"); 
//                		response.sendRedirect("/businessTest/login.jsp"); 
//                		return "login"; 
//                    }else{
//                    	return ai.invoke();
//                    }
//                } 
//            }
//        }
//    }
    
    
    HttpServletRequest request = ServletActionContext.getRequest();
	HttpServletResponse response = ServletActionContext.getResponse();
	HttpSession session = request.getSession();
	request.setCharacterEncoding("UTF-8");
	response.setContentType("text/html; charset=UTF-8");
	PrintWriter out = response.getWriter();
	
	String name = (String) ServletActionContext.getRequest().getSession().getAttribute("userName");
	String url = request.getRequestURI();
	if (url.indexOf("manager_")!=-1 || url.indexOf("logout")!=-1){
         return ai.invoke();
	}else if (name != null) {
		ai.invoke();
	}else{
//		if(session != null){
//			session.invalidate();
//		}
		if((url).contains("/menu_protal")){
			out.print("<script>window.top.location.href = 'session.jsp';</script>");
		}else{
			String type=request.getParameter("ajaxType");
			if(type!=null && type.equals("json")){
				Map map = new HashMap();  
				map.put("json", "json");  
				String json = JSONObject.fromObject(map).toString();
				out.write(json);
			}else{
				out.print("<script>window.top.location.href = 'session.jsp';</script>");
//				return "tologin";
			}
		}
	}
	
	out.close();
	out.flush();
	return null;
}
}